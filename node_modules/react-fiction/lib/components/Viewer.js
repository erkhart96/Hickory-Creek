'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});

var _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; desc = parent = getter = undefined; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }

function _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRedux = require('react-redux');

var _invariant = require('invariant');

var _invariant2 = _interopRequireDefault(_invariant);

var _ContextTypes = require('../ContextTypes');

var _ducksStory = require('../ducks/story');

function mapStateToProps(state, props) {
  var _state$story = state.story;
  var rooms = _state$story.rooms;
  var data = _state$story.data;
  var currentRoom = _state$story.currentRoom;
  var history = _state$story.history;

  return { rooms: rooms, data: data, currentRoom: currentRoom, history: history };
}

var Viewer = (function (_Component) {
  _inherits(Viewer, _Component);

  function Viewer() {
    _classCallCheck(this, _Viewer);

    _get(Object.getPrototypeOf(_Viewer.prototype), 'constructor', this).apply(this, arguments);
  }

  _createClass(Viewer, [{
    key: 'getChildContext',
    value: function getChildContext() {
      return {
        room: {
          info: this.props.rooms[this.props.currentRoom],
          data: this.props.data[this.props.currentRoom],
          updateData: this.props.updateData.bind(null, this.props.currentRoom)
        },
        story: {
          data: this.props.data['react-fiction/story'],
          updateData: this.props.updateData.bind(null, 'react-fiction/story'),
          history: this.props.history,
          updateCurrentRoom: this.props.updateCurrentRoom
        }
      };
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props;
      var rooms = _props.rooms;
      var currentRoom = _props.currentRoom;

      var room = rooms[currentRoom];

      (0, _invariant2['default'])(room, 'The Viewer was unable to find a room to render. This typically happens when you didn\'t set a starting room. One of your Room components must have the `start` property set on it.');

      return _react2['default'].createElement(
        'div',
        { id: currentRoom, className: 'react-fiction-viewer' },
        this.props.children
      );
    }
  }], [{
    key: 'propTypes',
    value: {
      children: _react.PropTypes.node,
      rooms: _react.PropTypes.object.isRequired,
      data: _react.PropTypes.object.isRequired,
      currentRoom: _react.PropTypes.string.isRequired,
      history: _react.PropTypes.array.isRequired,
      updateData: _react.PropTypes.func.isRequired,
      updateCurrentRoom: _react.PropTypes.func.isRequired
    },
    enumerable: true
  }, {
    key: 'childContextTypes',
    value: {
      room: _ContextTypes.RoomDataShape,
      story: _ContextTypes.StoryDataShape
    },
    enumerable: true
  }]);

  var _Viewer = Viewer;
  Viewer = (0, _reactRedux.connect)(mapStateToProps, { updateData: _ducksStory.updateData, updateCurrentRoom: _ducksStory.updateCurrentRoom })(Viewer) || Viewer;
  return Viewer;
})(_react.Component);

exports['default'] = Viewer;
module.exports = exports['default'];